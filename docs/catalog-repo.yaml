openapi: 3.0.3
info:
  title: Catalog Repository API
  description: Catalog Repository service REST API specification. Catalog Repository service is intended to serve information about products.
  version: 1.0.0
servers:
  - url: 'https://'
    description: 'Dev Server'
security:
  - basicAuth: [ ]
tags:
  - name: artists
    description: Artists management resources
  - name: products
    description: Products management resources
paths:
  /artists:
    options:
      summary: CORS support
      tags:
        - artists
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {"statusCode" : 200}
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: '{}'
      x-amazon-apigateway-auth: NONE
    get:
      summary: List artists
      description: Returns list of artists with info about each
      operationId: artists-list
      tags:
        - artists
      parameters:
        - name: styles
          description: 'Artist styles filter'
          in: query
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ArtistStyle'
      responses:
        200:
          description: 'Successfully returned artists list'
          content:
            application/json:
              schema:
                title: 'Artists List'
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/Artist'
        401:
          description: 'Unauthorized Exception'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
        requestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.origin: method.request.header.origin
        responseParameters:
          method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
        security:
          - basicAuth: [ ]
  /products:
    options:
      summary: CORS support
      tags:
        - products
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {"statusCode" : 200}
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: '{}'
      x-amazon-apigateway-auth: NONE
    get:
      summary: List products
      description: Returns list of products ordered by the score with a possibility to filter by supported fields
      operationId: products-list
      tags:
        - products
      parameters:
        - name: country
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: artist_name
          in: query
          schema:
            title: 'Artist Name'
            type: string
            minLength: 2
        - name: clearance
          in: query
          schema:
            title: 'Clearance'
            description: 'Is product on clearance sale'
            type: boolean

        - name: collections_lv1
          in: query
          explode: false
          schema:
            title: 'Collections Level 1 (old)'
            deprecated: true
            type: array
            minItems: 1
            items:
              type: string
              minLength: 1
        - name: collections_lv2
          in: query
          explode: false
          schema:
            title: 'Collections Level 2 (old)'
            deprecated: true
            type: array
            minItems: 1
            items:
              type: string
              minLength: 1

        - name: styles_lv1
          in: query
          explode: false
          schema:
            title: 'Product Styles Level 1'
            type: array
            minItems: 1
            items:
              type: string
              minLength: 1
        - name: styles_lv2
          in: query
          explode: false
          schema:
            title: 'Product Styles Level 2'
            type: array
            minItems: 1
            items:
              type: string
              minLength: 1

        - name: tags_auto
          in: query
          explode: false
          schema:
            title: 'Automated Tags'
            type: array
            minItems: 1
            items:
              type: string
              minLength: 1

        - name: layout_names
          in: query
          explode: false
          schema:
            title: 'Layout Names'
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/LayoutName'
        - name: layout_pieces
          in: query
          explode: false
          schema:
            title: 'Layout Pieces'
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/LayoutPieces'
        - name: layout_shapes
          in: query
          explode: false
          schema:
            title: 'Layout Shape'
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/LayoutShape'
        - name: layout_types
          in: query
          explode: false
          schema:
            title: 'Layout Types'
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/LayoutType'
        - name: layout_preview_room_types
          in: query
          explode: false
          schema:
            title: 'Layout Preview Room Types'
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/RoomType'

        - name: colors
          in: query
          explode: false
          schema:
            title: 'Colors'
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/Color'

        - name: page_size
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 200
        - name: page_token
          in: query
          schema:
            $ref: '#/components/schemas/PageToken'
      responses:
        200:
          description: 'Successfully returned products list'
          content:
            application/json:
              schema:
                title: 'Products List'
                description: 'Product List Details'
                type: object
                required:
                  - items
                properties:
                  page_token:
                    $ref: '#/components/schemas/PageToken'
                  items:
                    title: 'Product Items'
                    description: 'Current page with product items'
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/Product'
        401:
          description: 'Unauthorized Exception'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
        requestParameters:
          integration.request.querystring.country: method.request.querystring.country
          integration.request.querystring.artist_name: method.request.querystring.artist_name
          integration.request.querystring.clearance: method.request.querystring.clearance
          integration.request.querystring.collections_lv1: method.request.querystring.collections_lv1
          integration.request.querystring.collections_lv2: method.request.querystring.collections_lv2
          integration.request.querystring.styles_lv1: method.request.querystring.styles_lv1
          integration.request.querystring.styles_lv2: method.request.querystring.styles_lv2
          integration.request.querystring.tags_auto: method.request.querystring.tags_auto
          integration.request.querystring.layout_names: method.request.querystring.layout_names
          integration.request.querystring.layout_pieces: method.request.querystring.layout_pieces
          integration.request.querystring.layout_shapes: method.request.querystring.layout_shapes
          integration.request.querystring.layout_types: method.request.querystring.layout_types
          integration.request.querystring.layout_preview_room_types: method.request.querystring.layout_preview_room_types
          integration.request.querystring.colors: method.request.querystring.colors
          integration.request.querystring.page_size: method.request.querystring.page_size
          integration.request.querystring.page_token: method.request.querystring.page_token
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.origin: method.request.header.origin
        responseParameters:
          method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
        security:
          - basicAuth: [ ]
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Error:
      type: object
      title: 'Error'
      description: 'Error Details'
      properties:
        code:
          type: string
          title: 'Code'
          description: 'Error internal code'
        message:
          type: string
          title: 'Message'
          description: 'Error message'

    PageToken:
      title: 'Page Token'
      description: 'Next Page Token'
      minLength: 3
      type: string

    Country:
      title: 'Country'
      description: 'Country Code'
      type: string
      default: 'us'
      enum:
        - 'us'
        - 'ca'

    Color:
      title: 'Color'
      type: string
      enum:
        - 'Aquamarine'
        - 'B&w'
        - 'Beige'
        - 'Black'
        - 'Blue gray'
        - 'Blue'
        - 'Brown'
        - 'Classic blue'
        - 'Dark green'
        - 'Gold'
        - 'Gray'
        - 'Green'
        - 'Light blue'
        - 'Light green'
        - 'Lime green'
        - 'Main-yellow'
        - 'Maroon'
        - 'Navy blue'
        - 'Orange'
        - 'Pink'
        - 'Purple'
        - 'Red'
        - 'Rose gold'
        - 'Royal blue'
        - 'Silver'
        - 'Teal'
        - 'True blue'
        - 'True green'
        - 'Turquoise'
        - 'White'
        - 'Yellow'

    RoomType:
      title: 'Room Type'
      description: 'Supported Room Type'
      type: string
      enum:
        - 'bar'
        - 'bathroom'
        - 'bedroom'
        - 'cafe & restaurant'
        - 'dining room'
        - 'gym/sport rooms'
        - 'hallway'
        - 'home office & office'
        - 'home office'
        - 'kids & nursery'
        - 'kids room'
        - 'kitchen & cafe'
        - 'kitchen & dining room'
        - 'kitchen'
        - 'laundry room'
        - 'living room'
        - 'lobby'
        - 'man cave & bar'
        - 'mancave'
        - 'nursery'
        - 'office'
        - 'salon'
        - 'spa'
        - 'teenager'
        - 'wall'

    LayoutName:
      title: 'Layout Name'
      description: 'Product Layout Name'
      type: string
      enum:
        - '1 Horizontal'
        - '1 Panoramic'
        - '1 Square'
        - '1 Vertical Wide'
        - '1 Vertical'
        - '2 Horizontal'
        - '2 Square'
        - '3 Bow Horizontal'
        - '3 Horizontal'
        - '3 Square'
        - '3 Vertical Wide'
        - '3 Vertical'
        - '3 Wine'
        - '4 Horizontal'
        - '4 Mess'
        - '4 Square'
        - '4 Vertical Wide'
        - '5 Horizontal'
        - '5 Mess'
        - '5 Star'
        - '6 Horizontal'
        - '6 Vertical'
        - '7 Hexagon'
        - 'Core Horizontal'
        - 'Core Vertical'
        - 'Floating Horizontal'
        - 'Floating Panoramic'
        - 'Floating Vertical Wide'
        - 'Framed Horizontal'
        - 'Framed Panoramic'
        - 'Framed Vertical Wide'
    LayoutType:
      title: 'Layout Type'
      description: 'Product Layout Type'
      type: string
      enum:
        - 'Canvas'
        - 'Multiple'
        - 'Framed Print'
        - 'Framed Canvas'
    LayoutShape:
      title: 'Layout Shape'
      description: 'Product Layout Shape'
      type: string
      enum:
        - 'horizontal'
        - 'vertical'
        - 'square'
        - 'panoramic'
        - 'hexagon'
    LayoutPieces:
      title: 'Layout Pieces'
      description: 'Number of Pieces in Layout'
      type: integer
      minimum: 1
      maximum: 7

    ProductScore:
      type: object
      title: 'Product Score (internal only)'
      description: 'Product ranking score based on sales and other data. This is used for internal scoring, but will not be returned to the client.'
      properties:
        7_days:
          title: '7 Days Score'
          description: 'Product Score for the past 7 Days'
          type: integer
          minimum: 0
        30_days:
          title: '30 Days Score'
          description: 'Product Score for the past 30 Days'
          type: integer
          minimum: 0
        90_days:
          title: '90 Days Score'
          description: 'Product Score for the past 90 Days'
          type: integer
          minimum: 0
        all_time:
          title: 'All Time Score'
          description: 'Product Score for all time'
          type: integer
          minimum: 0

    Product:
      type: object
      title: 'Product'
      description: 'Product Details'
      required:
        - sku
        - product_type
        - url
        - color_main
        - colors
        - layouts
      properties:
        sku:
          title: 'SKU'
          description: 'Product SKU'
          type: string
          minLength: 1
        title:
          title: 'Title'
          description: 'Product Title'
          type: string
        description:
          title: 'Description'
          description: 'Product Description'
          type: string
        product_type:
          title: 'Type'
          description: 'Product Type'
          type: string
        main_image:
          title: 'Main Image'
          description: 'Product Main Image URL'
          type: string
        square_image:
          title: 'Square Image'
          description: 'Product Square Image URL'
          type: string
        url:
          title: 'URL'
          description: 'Product URL'
          type: string

        collections_lv1:
          title: 'Collections Level 1 (old)'
          description: 'Product Collections Level 1 (old)'
          deprecated: true
          type: array
          items:
            type: string
            minLength: 1

        collections_lv2:
          title: 'Collections Level 2 (old)'
          description: 'Product Collections Level 2 (old)'
          deprecated: true
          type: array
          items:
            type: string
            minLength: 1

        color_main:
          $ref: '#/components/schemas/Color'
        colors:
          title: 'Colors'
          description: 'Product Colors'
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Color'

        wish_count:
          title: 'Wish Count'
          description: 'Product Wish Count'
          type: integer
          minimum: 0

        score_us:
          $ref: '#/components/schemas/ProductScore'
        score_ca:
          $ref: '#/components/schemas/ProductScore'

        reviews_count:
          title: 'Reviews Count'
          description: 'Product Reviews Count'
          type: integer
          minimum: 0
        reviews_avg_rating:
          title: 'Reviews Average Rating'
          description: 'Product Reviews Average Rating'
          type: number
          format: float
          minimum: 0

        tags_auto:
          title: 'Automated Tags'
          description: 'Product Automated Tags'
          type: array
          items:
            type: string
            minLength: 1

        clearance:
          title: 'Clearance'
          description: 'Is product on clearance sale'
          type: boolean
        clearance_details:
          title: 'Clearance Details'
          description: 'Product Clearance Details'
          type: array
          items:
            title: 'Clearance Item'
            description: 'Product Clearance Item'
            type: object
            required:
              - layout_name
              - variant
              - size
              - price
              - quantity
              - url
            properties:
              layout_name:
                $ref: '#/components/schemas/LayoutName'
              variant:
                title: 'Item Variant'
                description: 'Clearance Item Variant'
                type: string
              size:
                title: 'Item Size'
                description: 'Clearance Item Size'
                type: string
              price:
                title: 'Item Price'
                description: 'Clearance Item Price'
                type: number
                minimum: 0
              compare_at_price:
                title: 'Item Old Price'
                description: 'Clearance Item Old Price'
                type: number
                minimum: 0
              quantity:
                title: 'Item Quantity'
                description: 'Clearance Item Quantity'
                type: integer
                minimum: 1
              url:
                title: 'Item URL'
                description: 'Clearance Item URL'
                type: string

        layouts:
          title: 'Layouts'
          description: 'Product Layouts'
          type: array
          items:
            title: 'Layout'
            description: 'Product Layout'
            type: object
            required:
              - type
              - pieces
              - shape
            properties:
              name:
                $ref: '#/components/schemas/LayoutName'
              type:
                $ref: '#/components/schemas/LayoutType'
              pieces:
                $ref: '#/components/schemas/LayoutPieces'
              shape:
                $ref: '#/components/schemas/LayoutShape'
              url:
                title: 'URL'
                description: 'Layout Shop URL'
                type: string
                minLength: 5
              sizes:
                title: 'Sizes'
                description: 'Layout Sizes'
                type: array
                items:
                  title: 'Layout Size'
                  description: 'Layout Size'
                  type: object
                  required:
                    - size
                  properties:
                    size:
                      title: 'Size'
                      description: 'Layout Dimensions Size'
                      type: string
                      minLength: 3
                    name:
                      title: 'Name'
                      description: 'Layout Size Name'
                      type: string
              previews:
                title: 'Previews'
                description: 'Layout Previews'
                type: array
                items:
                  title: 'Preview'
                  description: 'Layout Preview'
                  type: object
                  required:
                    - preview_url
                    - room_type
                    - styles
                    - colors
                  properties:
                    preview_url:
                      title: 'Preview URL'
                      description: 'Layout Preview URL'
                      type: string
                    empty_room_url:
                      title: 'Room Preview URL'
                      description: 'Empty Room Preview URL'
                      type: string
                    room_type:
                      $ref: '#/components/schemas/RoomType'
                    colors:
                      title: 'Colors'
                      description: 'Preview Colors'
                      type: array
                      items:
                        type: string
                        enum:
                          - 'b&w'
                          - 'black'
                          - 'blue'
                          - 'brown'
                          - 'gray'
                          - 'green'
                          - 'light blue'
                          - 'orange'
                          - 'pink'
                          - 'purple'
                          - 'red'
                          - 'vanilla'
                          - 'yellow'
                    styles:
                      title: 'Styles'
                      description: 'Preview Styles'
                      type: array
                      items:
                        type: string
                        enum:
                          - 'commercial'
                          - 'farmhouse'
                          - 'feminine'
                          - 'hipster'
                          - 'masculine'
                          - 'minimalist'
                          - 'modern'
                          - 'nautical'
                          - 'oriental'
                          - 'rustic'
                          - 'scandinavian'
                          - 'shabby chic'
                          - 'traditional'
                          - 'vintage'
                    unique:
                      title: 'Unique'
                      description: 'Preview Unique'
                      type: array
                      items:
                        type: string
                        enum:
                          - 'african'
                          - 'bizarre'
                          - 'bold color'
                          - 'casual'
                          - 'dark'
                          - 'festive'
                          - 'greenery'
                          - 'lights'
                          - 'musical'
                          - 'patio'
                          - 'pets'
                          - 'pop of color'
                          - 'sporty'

        rooms:
          title: 'Rooms'
          description: 'Product Rooms'
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RoomType'

        styles_lv1:
          title: 'Styles Level 1'
          description: 'Product Styles Level 1'
          type: array
          items:
            type: string
        styles_lv2:
          title: 'Styles Level 2'
          description: 'Product Styles Level 2'
          type: array
          items:
            type: string

        created_at:
          title: 'Created At'
          description: 'Product Creation Timestamp'
          type: integer
          format: int64
        last_updated_at:
          title: 'Updated At'
          description: 'Product Last Update Timestamp'
          type: integer
          format: int64
        published_at:
          title: 'Published At'
          description: 'Product Publishing Timestamp'
          type: integer
          format: int64

        shopify_id:
          title: 'Shopify Id'
          description: 'Product Shopify Id'
          type: integer
          format: int64

    ArtistStyle:
      title: 'Artist Style'
      description: 'Artist Style Types'
      type: string
      enum:
        - 'Alternative'
        - 'Beach House'
        - 'Fine Art'
        - 'Minimalist'
        - 'Photography'
        - 'Rustic'
        - 'Vintage'
        - 'Zen'

    Artist:
      title: 'Artist'
      description: 'Artist Details'
      type: object
      required:
        - name
        - styles
        - products_count
        - sales
        - sales_extras
      properties:
        name:
          title: 'Name'
          description: 'Artist Name'
          type: string
          minLength: 2
        styles:
          title: 'Styles'
          description: 'Artist Styles'
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ArtistStyle'
        preview_url:
          title: 'Preview URL'
          description: 'Artist Preview Image URL'
          type: string
          minLength: 2
        products_count:
          title: 'Products Count'
          description: 'Artist Products Count'
          type: integer
          minimum: 0
        published_at:
          title: 'Published At'
          description: 'Artist Published At Timestamp'
          type: integer
          format: int64
        sales:
          title: 'Sales'
          description: 'Artist Sales'
          type: integer
          minimum: 0
        sales_extras:
          title: 'Sales Extras'
          description: 'Artist Extras Sales'
          type: integer
          minimum: 0
